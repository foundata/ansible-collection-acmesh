# Handlers: Tasks that are triggered and run only when notified.

---

- name: "Handlers | systemd daemon-reload"
  ansible.builtin.systemd_service:
    daemon_reload: true
  listen: "run_acmesh: systemd daemon-reload"


- name: "Handlers | Set ownership and permissions of files and directories (restrict to user and/or group)"
  # The command or shell module is used here. This approach is justified:
  #
  # - No matter what kind of optimization is done, creating a connection per
  #   item by calling a module in a loop is simply too slow when handling many.
  # - We tried creating lists with "ansible.builtin.find" and iterations with
  #   "ansible.builtin.file". Checkout d826ee83588bfe1cbb538d6215b21ef090c79940
  #   to look at it in tasks/setup/install/default.yml. It was too slow.
  #
  # Notes on the command or script itself:
  #
  # - the -c (long version but not as portabl: --changes) of chmod and chown
  #   prints every processed file but reports only when a change is made.
  ansible.builtin.shell:
    cmd: |
      set -u # Fail on unset vars
      set -o pipefail # Fail if any pipe cmd fails
      set -e # Exit on any error (incl. in if/while/tests)

      # Set ownership of files and directories: service user and group
      find \
        {{ run_acmesh_cfg_home | ansible.builtin.quote }} \
        {{ run_acmesh_cfg_config_home | ansible.builtin.quote }} \
        {{ run_acmesh_cfg_cert_home | ansible.builtin.quote }} \
        -exec chown -c {{ (run_acmesh_user ~ ':' ~ run_acmesh_group) | ansible.builtin.quote }} {} \;
      chown -c {{ (run_acmesh_user ~ ':' ~ run_acmesh_group) | ansible.builtin.quote }} {{ (run_acmesh_cfg_config_home ~ '/account.conf') |
                                                                                           ansible.builtin.quote }}
      chown -c {{ (run_acmesh_user ~ ':' ~ run_acmesh_group) | ansible.builtin.quote }} {{ run_acmesh_cfg_logfile | ansible.builtin.quote }}

      # Set permissions of directories: 0750 / u=rwx,g=rx,o=
      find \
        {{ run_acmesh_cfg_home | ansible.builtin.quote }} \
        {{ run_acmesh_cfg_config_home | ansible.builtin.quote }} \
        {{ run_acmesh_cfg_cert_home | ansible.builtin.quote }} \
        -type d \
        -exec chmod -c 0750 {} \;

      # Set permissions of non-executables: 0640 / u=rw,g=r,o=
      # The account.conf will be handled later
      find \
        {{ run_acmesh_cfg_home | ansible.builtin.quote }} \
        {{ run_acmesh_cfg_config_home | ansible.builtin.quote }} \
        {{ run_acmesh_cfg_cert_home | ansible.builtin.quote }} \
        -type f \
        -not -name '*\.sh' \
        -not -wholename {{ (run_acmesh_cfg_config_home ~ '/account.conf') | ansible.builtin.quote }} \
        -exec chmod -c 0640 {} \;

      # Set permissions of executables: 0750 / u=rwx,g=rx,o=
      chmod -c 0750 {{ (run_acmesh_cfg_home ~ '/acme.sh') | ansible.builtin.quote }}
      find \
        {{ (run_acmesh_cfg_home ~ '/deploy') | ansible.builtin.quote }} \
        {{ (run_acmesh_cfg_home ~ '/dnsapi') | ansible.builtin.quote }} \
        {{ (run_acmesh_cfg_home ~ '/notify') | ansible.builtin.quote }} \
        -type f \
        -name '*\.sh' \
        -exec chmod -c 0750 {} \;

      # Set permissions of sensitive files directories: 0600 / u=rw,g=,o=
      chmod -c 0600 {{ (run_acmesh_cfg_config_home ~ '/account.conf') | ansible.builtin.quote }} # may contain credentials (e.g. DNS API or notify credentials)
      chmod -c 0600 {{ run_acmesh_cfg_logfile | ansible.builtin.quote }}

      exit 0
    executable: "/bin/bash" # Support for other shells untested (so far)
  args:
    chdir: "{{ run_acmesh_cfg_home }}"
  changed_when:
    - __run_acmesh_permissions_result.rc == 0
    - __run_acmesh_permissions_result.stdout | trim | length > 0
  register: __run_acmesh_permissions_result
  listen: "run_acmesh: set ownership and permissions"
